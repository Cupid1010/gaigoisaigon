
{{>admin-header}}
<input type="hidden" id="id" name="id" value='{{product._id}}'>
<form>
  <div class="form-group">
    <label for="productName">T√™n s·∫£n ph·∫©m</label>
    <input type="text" class="form-control" id="productName" name='productName' placeholder="Vui l√≤ng nh·∫≠p" value='{{product.productName}}' required>
  </div>

  <div class="form-group">
    <label for="productPrice">Gi√° s·∫£n ph·∫©m</label>
    <input type="text" class="form-control" id="productPrice" name='productPrice'  placeholder="Vui l√≤ng nh·∫≠p" value='{{product.productPrice}}' required>
     {{!-- <div class='updateSalePrice btn btn-primary'>C·∫≠p nh·∫≠t gi√° sau khi sale</d> --}}
  </div>

  {{!-- <div class="form-group">
    <label for="sale">Gi·∫£m gi√° bao nhi√™u ph·∫ßn trƒÉm</label>
    <p class='priceSale'></p>
    <input type="text" class="form-control" id="sale" name='sale' placeholder="Ph·∫ßn trƒÉm gi·∫£m gi√°" min='0' max='100' required value='{{product.sale}}'>
    <div class='updateSalePercent btn btn-primary'>C·∫≠p % gi·∫£m gi√° theo gi√° g·ªëc v√† gi√° ƒë√£ sale</d>
  </div> --}}

  {{!-- Ch·ªâ ·ªü client --}}
  {{!-- <div class="form-group">
    <label for="sale">Gi√° Sau Khi Sale</label>
    <input type="number" class="form-control" id="priceAfterSale" name='priceAfterSale' placeholder="Gi√° sau khi gi·∫£m">
      <div class='updateOriginPrice btn btn-primary'>C·∫≠p nh·∫≠t gi√° g·ªëc</div>
  </div> --}}
  {{!-- Ch·ªâ ·ªü client --}}

  <div class="form-group">
    <label for="productDescription">M√¥ t·∫£ s·∫£n ph·∫©m</label>
    <textarea  type="text"  class="form-control" id="productDescription" name='productDescription' placeholder="M·ªói m√¥ t·∫£ m·ªôt d√≤ng" rows="10" cols="50" required>
      {{#each product.productDescription}}
      {{this.descText}}
      {{/each}}
    </textarea>
  </div>

  
{{!-- 
   <div class="form-group">
    <label for="productColor">M√†u s·∫Øc</label>
    <input type="text" class="form-control" id="productColor" name='productColor' placeholder="Vui l√≤ng nh·∫≠p" value='{{product.productColor}}' required>
  </div> --}}
{{!-- <p>Gi·ªõi t√≠nh</p>

<div class="d-flex">
    {{#renderRadioGender}}
            {{product}}
    {{/renderRadioGender}}
</div> --}}

<p>L√† s·∫£n ph·∫©m ƒë·∫∑c bi·ªát</p>

<div class="d-flex">

     {{#renderRadioSpecical}}
            {{product}}
    {{/renderRadioSpecical}}
    
    
</div>
<p>L√† s·∫£n c·∫ßn ƒë·∫∑t tr∆∞·ªõc</p>

<div class="d-flex">

     {{#renderRadioPreOrder}}
            {{product}}
    {{/renderRadioPreOrder}}
    
    
</div>

  {{!-- <div class="form-group">
    <label for="productSize">Nh·∫≠p size s·∫£n ph·∫©m</label>
    <input  type="text"  class="form-control" id="productSize" name='productSize' placeholder="S·ª≠ d·ª•ng kho·∫£ng tr·ªëng gi·ªØa c√°c size VD: 35 36 37" value='{{listSize}}' required>
  </div> --}}


  
  <div class="form-group">
    <label for="files">Nh·∫≠p ·∫£nh/ video(Kh√¥ng b·∫Øt bu·ªôc):</label>
      <input type="file" name="file" id="files" multiple class='form-control' > 

  </div>
  <div class="form-group">
    <div class="d-flex">
        <div class="row">
            {{#each product.productImg}}
              <div class="col-3 col-sm-6 col-md-2 col-lg-1">
                  <img src="{{this}}" alt="{{product.productName}}">
              </div>

              {{/each}}
        </div>
      
    </div>

  </div>
  <div class="form-group">
    <label for="weight">C√¢n n·∫∑ng</label>
      <input type="number" name="weight" id="weight" class='form-control' value = "{{product.weight}}"required>
  </div>
  <div class="form-group">
    <label for="quantitySold:">L∆∞·ª£ng b√°n</label>
      <input type="text" name="quantitySold" id="quantitySold" class='form-control' value = "{{product.quantitySold}}" required>
  </div>

  <div class="form-group">
    <label for="form-select-brand">Th∆∞∆°ng hi·ªáu</label>

    <select class="form-select-brand" aria-label="Default select example">
                {{#checkIsTheSameValue }}
                    {{brandList}}
                {{/checkIsTheSameValue }}
    </select>
  </div>

    {{!-- gaigoi --}}
  <div class="form-group">
    <label for="productPhoneNumber:">S·ªë ƒëi·ªán tho·∫°i</label>
      <input value='{{product.productPhoneNumber}}' type="text" name="productPhoneNumber" id="productPhoneNumber" class='form-control' required>
  </div>
  <div class="form-group">
    <label for="yearsOfBirth:">NƒÉm sinh</label>
      <input value='{{product.yearsOfBirth}}' type="text" name="yearsOfBirth" id="yearsOfBirth" class='form-control' required>
  </div>

  <div class="form-group">
    <label for="height:">Chi·ªÅu cao</label>
     <input value='{{product.height}}' type="number" name="height" id="height" class='form-control' required>
  </div>

  <div class="form-group">
    <label for="threeRingMeasurements:">S·ªë ƒëo 3 v√≤ng</label>
      <input value='{{product.threeRingMeasurements}}' type="text" name="threeRingMeasurements" id="threeRingMeasurements" class='form-control' required>
  </div>

  <div class="form-group">
    <label for="orgin:">Xu·∫•t s·ª©</label>
      <input value='{{product.orgin}}' type="text" name="orgin" id="orgin" class='form-control' required>
  </div>

  <div class="form-group">
    <label for="position:">V·ªã tr√≠</label>
      <input value='{{product.position}}' type="text" name="position" id="position" class='form-control' required>
  </div>

  <div class="form-group">
    <label for="adress:">ƒê·ªãa ch·ªâ</label>
      <input value='{{product.adress}}' type="text" name="adress" id="adress" class='form-control' required>
  </div>
  
  <div class="form-group">
    <label for="workingTime:">Th·ªùi gian l√†m vi·ªác</label>
      <input value='{{product.workingTime}}' type="text" name="workingTime" id="workingTime" class='form-control' required>
  </div>
  
  <div class="form-group">
    <label for="services:"></label>
      <input value='{{product.services}}' type="text" name="services" id="services" class='form-control' required>
  </div>
  

  {{!-- <div class="form-group">
    <label for="productDescription">M√¥ t·∫£ s·∫£n ph·∫©m</label>
    <textarea  type="text"  class="form-control" id="productDescription" name='productDescription' placeholder="M·ªói m√¥ t·∫£ m·ªôt d√≤ng" rows="10" cols="50" required></textarea>
  </div> --}}
  
  

  <button type="submit" class="btn btn-primary">S·ª≠a s·∫£n ph·∫©m</button>
  <button type="button" class="btn btn-secondary back-to-product-list-page">Quay l·∫°i</button>
</form>

{{!-- Check gi√° sau khi nh·∫≠p ph·∫ßn trƒÉm gi·∫£m gi√° --}}
<script>
      const productPriceElement = document.querySelector('#productPrice');
      const priceSaleElement = document.querySelector('.priceSale');
      const priceAfterSaleInputElement = document.querySelector('#priceAfterSale');
      const saleElement = document.querySelector('#sale');

      const updateSalePercentElement = document.querySelector('.updateSalePercent');
      const updateOriginPriceElement = document.querySelector('.updateOriginPrice ');
      const updateSalePriceElement = document.querySelector('.updateSalePrice ')

      function updateSalePrice () {
          const salePrice = Number(productPriceElement.value) - (Number(productPriceElement.value) * saleElement.value ) / 100;
          console.log("üöÄ ~ file: addproduct.hbs:114 ~ saleElement.addEventListener ~ salePrice:", salePrice)
          
          priceAfterSaleInputElement.value = salePrice;
      }

      function updateOriginPrice () {
          const originPrice = Number(priceAfterSaleInputElement.value)/(1-(Number(saleElement.value)/100))
          console.log("üöÄ ~ file: editproduct.hbs:139 ~ updateOriginPrice ~ originPrice:", Number(saleElement.value))

          productPriceElement.value = originPrice;
      }


      function updateSalePercent () {
            const salePercent = ((Number(productPriceElement.value)-Number(priceAfterSaleInputElement.value))/Number(productPriceElement.value)) * 100;

            saleElement.value = salePercent;
      }

   

      updateOriginPriceElement.addEventListener('click',function(e) {
          e.preventDefault();
          updateOriginPrice()

      })

  

      updateSalePercentElement.addEventListener('click', function(e) {
          e.preventDefault();

          updateSalePercent()
      })


      updateSalePriceElement.addEventListener('click', function(e) {
          e.preventDefault();
          updateSalePrice();
      })



      

</script>

<script>


const id = document.getElementById('id').value;

const form = document.querySelector('form');
form.addEventListener('submit', (e) => {
    
    e.preventDefault();
    // Prevents HTML handling submission
    const productGender = document.querySelector('input[name="productGender"]:checked')?.value || 'Unisex';
    const isSpecial = document.querySelector('input[name="isSpecial"]:checked')?.value;
    const isPreOrder = document.querySelector('input[name="isPreOrder"]:checked')?.value;
    const productName = document.querySelector('input[name="productName"]');
    const productPrice = document.querySelector('input[name="productPrice"]');
    const productDescription = document.querySelector('textarea[name="productDescription"]');
    const sale = document.querySelector('input[name="sale"]');
    const productColor = document.querySelector('input[name="productColor"]');
    const productSize = document.querySelector('input[name="productSize"]');
    const files = document.getElementById("files");
    const brand = document.querySelector('.form-select-brand');

    const weight = document.querySelector('input[name="weight"]');
    const quantitySold = document.querySelector('input[name="quantitySold"]');
  


     //gaigoi
    const productPhoneNumber = document.querySelector('input[name="productPhoneNumber"]');
    const yearsOfBirth = document.querySelector('input[name="yearsOfBirth"]');
    const height = document.querySelector('input[name="height"]');
    const threeRingMeasurements = document.querySelector('input[name="threeRingMeasurements"]');
    const orgin = document.querySelector('input[name="orgin"]');
    const position = document.querySelector('input[name="position"]');
    const adress = document.querySelector('input[name="adress"]');
    const workingTime = document.querySelector('input[name="workingTime"]');
    const services = document.querySelector('input[name="services"]');

    
    const formData = new FormData();
     
    formData.append('productGender',productGender);
    formData.append('isSpecial',isSpecial);
    formData.append('isPreOrder',isPreOrder);
    formData.append('productName',productName.value);
    formData.append('productPrice',productPrice.value);
    formData.append('productDescription',productDescription.value);
    //formData.append('sale',sale.value);
    //formData.append('productColor',productColor.value);
    //formData.append('productSize',productSize.value);
    formData.append('brand',brand.value);
    formData.append('weight',weight.value);
    formData.append('quantitySold',quantitySold.value);

   //gaigoi
     formData.append('productPhoneNumber',productPhoneNumber.value);
     formData.append('yearsOfBirth',yearsOfBirth.value);
     formData.append('height',height.value);
     formData.append('threeRingMeasurements',threeRingMeasurements.value);
     formData.append('orgin',orgin.value);
     formData.append('position',position.value);
     formData.append('adress',adress.value);
     formData.append('workingTime',workingTime.value);
     formData.append('services',services.value);

    // Creates empty formData object

    // Appends value of text input
    for(let i =0; i < files.files.length; i++) {
        formData.append("files", files.files[i]);
    }

    console.log('formData',formData)


    // Appends value(s) of file input
    // Post data to Node and Express server:
    const token = JSON.parse(sessionStorage.getItem('admin-token'));

    // Check have file , if not have file don't delete old file
    let haveFile = false;
    
    for (var i = 0 ; i < files.files.length ; i ++){
      if(files.files[i].size > 0)
      {
            haveFile = true;
      }
      else {
           haveFile = false;
      }
  
    }

    
    fetch(`/admin/edit-product/${id}/${token}/${haveFile}`, {
        method: 'POST',
        body: formData, // Payload is formData object
    })
    .then(res => res.json())
    .then(data => 
    {
      if(data.isSuccess) {
        window.location = window.location.hostname;
      }
    });
})
</script>

<script>
   const admintoken= JSON.parse(sessionStorage.getItem('admin-token'));
    document.querySelector('.back-to-product-list-page').addEventListener('click', function(e){
      window.location.href=`/admin/products/${admintoken}`
    })
</script>

{{>admin-footer}}


